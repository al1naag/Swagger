---
openapi: 3.0.0
info:
  title: CoursesInfo
  version: 1.0.0
servers:
- url: http://23.88.52.139:3000/
- url: https://virtserver.swaggerhub.com/al1naag/Courses_Info/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /students:
    get:
      tags:
      - default
      summary: getStudents
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200'
    post:
      tags:
      - default
      summary: createStudent
      requestBody:
        $ref: '#/components/requestBodies/createStudent'
      responses:
        "405":
          description: Method Not Allowed
          content:
            text/html:
              schema:
                type: string
                example: Method Not Allowed
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
                example: Студент добавлен
        "400":
          description: Bad Request
          content:
            text/html:
              schema:
                type: string
                example: Bad Request
  /students/{Id}:
    get:
      tags:
      - default
      summary: getStudentById
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200'
    put:
      tags:
      - default
      summary: updateStudent
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
      requestBody:
        $ref: '#/components/requestBodies/updateStudent'
      responses:
        "405":
          description: Method Not Allowed
          content:
            text/html:
              schema:
                type: string
                example: Method Not Allowed
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
                example: Студент обновлен
        "400":
          description: Bad Request
          content:
            text/html:
              schema:
                type: string
                example: Bad Request
    delete:
      tags:
      - default
      summary: deleteStudent
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
      responses:
        "405":
          description: Method Not Allowed
          content:
            text/html:
              schema:
                type: string
                example: Method Not Allowed
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
                example: Студент удален
        "400":
          description: Bad Request
          content:
            text/html:
              schema:
                type: string
                example: Bad Request
  /courses:
    get:
      tags:
      - default
      summary: getCourses
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200_1'
    post:
      tags:
      - default
      summary: createCourse
      requestBody:
        $ref: '#/components/requestBodies/createCourse'
      responses:
        "405":
          description: Method Not Allowed
          content:
            text/html:
              schema:
                type: string
                example: Method Not Allowed
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
                example: Курс добавлен
        "400":
          description: Bad Request
          content:
            text/html:
              schema:
                type: string
                example: Bad Request
  /courses/{Id}:
    get:
      tags:
      - default
      summary: getCourseById
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200_1'
    put:
      tags:
      - default
      summary: updateCourse
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
      requestBody:
        $ref: '#/components/requestBodies/updateCourse'
      responses:
        "405":
          description: Method Not Allowed
          content:
            text/html:
              schema:
                type: string
                example: Method Not Allowed
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
                example: Курс обновлен
        "400":
          description: Bad Request
          content:
            text/html:
              schema:
                type: string
                example: Bad Request
    delete:
      tags:
      - default
      summary: deleteCourse
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
      responses:
        "405":
          description: Method Not Allowed
          content:
            text/html:
              schema:
                type: string
                example: Method Not Allowed
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
                example: Курс удален
        "400":
          description: Bad Request
          content:
            text/html:
              schema:
                type: string
                example: Bad Request
  /payments:
    get:
      tags:
      - default
      summary: getPayments
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200_2'
    post:
      tags:
      - default
      summary: createPayment
      requestBody:
        $ref: '#/components/requestBodies/createPayment'
      responses:
        "405":
          description: Method Not Allowed
          content:
            text/html:
              schema:
                type: string
                example: Method Not Allowed
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
                example: Добавлена оплата
        "400":
          description: Bad Request
          content:
            text/html:
              schema:
                type: string
                example: Bad Request
  /payments/{Id}:
    get:
      tags:
      - default
      summary: getPaymentById
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200_2'
    put:
      tags:
      - default
      summary: updatePayment
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
      requestBody:
        $ref: '#/components/requestBodies/updatePayment'
      responses:
        "405":
          description: Method Not Allowed
          content:
            text/html:
              schema:
                type: string
                example: Method Not Allowed
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
                example: Оплата обновлена
        "400":
          description: Bad Request
          content:
            text/html:
              schema:
                type: string
                example: Bad Request
    delete:
      tags:
      - default
      summary: deletePayment
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
      responses:
        "405":
          description: Method Not Allowed
          content:
            text/html:
              schema:
                type: string
                example: Method Not Allowed
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
                example: Оплата удалена
        "400":
          description: Bad Request
          content:
            text/html:
              schema:
                type: string
                example: Bad Request
  /students_courses:
    get:
      tags:
      - default
      summary: getStudentsCourses
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200_3'
    post:
      tags:
      - default
      summary: createStudentsCourse
      requestBody:
        $ref: '#/components/requestBodies/createStudentsCourses'
      responses:
        "405":
          description: Method Not Allowed
          content:
            text/html:
              schema:
                type: string
                example: Method Not Allowed
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
                example: Студент добавлен на курс
        "400":
          description: Bad Request
          content:
            text/html:
              schema:
                type: string
                example: Bad Request
  /students_courses/{Id}:
    get:
      tags:
      - default
      summary: getStudentsCourseById
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
        "405":
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
    put:
      tags:
      - default
      summary: updateStudentsCourse
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
      requestBody:
        $ref: '#/components/requestBodies/updateStudentsCourses'
      responses:
        "405":
          description: Method Not Allowed
          content:
            text/html:
              schema:
                type: string
                example: Method Not Allowed
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
                example: Студент на курсе обновлен
        "400":
          description: Bad Request
          content:
            text/html:
              schema:
                type: string
                example: Bad Request
    delete:
      tags:
      - default
      summary: deleteStudentsCourse
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
      responses:
        "405":
          description: Method Not Allowed
          content:
            text/html:
              schema:
                type: string
                example: Method Not Allowed
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
                example: Студент на курсе удален
        "400":
          description: Bad Request
          content:
            text/html:
              schema:
                type: string
                example: Bad Request
components:
  schemas:
    Schema:
      type: object
      properties:
        id:
          type: integer
          format: int64
    createStudent:
      type: object
      properties:
        name:
          type: string
          example: Иван
        surname:
          type: string
          example: Иванов
        email:
          type: string
          example: ivan.ivanov@gmail.com
        country:
          type: string
          example: Россия
    updateStudent:
      type: object
      properties:
        name:
          type: string
          example: Иван
        surname:
          type: string
          example: Иванов
        email:
          type: string
          example: ivan.ivanov@gmail.com
        country:
          type: string
          example: Россия
    createCourse:
      type: object
      properties:
        name_course:
          type: string
          example: С
        price_course:
          type: integer
          example: 25000
    updateCourse:
      type: object
      properties:
        name_course:
          type: string
          example: C
        price_course:
          type: integer
          example: 25000
    createPayment:
      type: object
      properties:
        student_id:
          type: integer
          example: 200
        name:
          type: string
          example: Иван
        surname:
          type: string
          example: Иванов
        name_course:
          type: string
          example: Иванов
        payment:
          type: integer
          example: 25000
    updatePayment:
      type: object
      properties:
        student_id:
          type: integer
          example: 200
        name:
          type: string
          example: Иван
        surname:
          type: string
          example: Иванов
        name_course:
          type: string
          example: Иванов
        payment:
          type: integer
          example: 25000
    createStudentsCourses:
      type: object
      properties:
        student_id:
          type: integer
          example: 200
        name:
          type: string
          example: Иван
        surname:
          type: string
          example: Иванов
        name_course:
          type: string
          example: JavaScript
    updateStudentsCourses:
      type: object
      properties:
        student_id:
          type: integer
          example: 200
        name:
          type: string
          example: Иван
        surname:
          type: string
          example: Иванов
        name_course:
          type: string
          example: JavaScript
    inline_response_200:
      type: object
      properties:
        student_id:
          type: integer
          example: 1
        name:
          type: string
          example: Иван
        surname:
          type: string
          example: Иванов
        email:
          type: string
          example: ivan.ivanov@gmail.com
        country:
          type: string
          example: Россия
        created_at:
          pattern: ([0-9]{2}).(?:[0-9]{2}).([0-9]{4})
          type: string
          format: date
          example: "27.07.2021"
    inline_response_200_1:
      type: object
      properties:
        name_course:
          type: string
          example: JavaScript
        price_course:
          type: integer
          example: 25000
        course_id:
          type: integer
          example: 1
    inline_response_200_2:
      type: object
      properties:
        student_id:
          type: integer
          example: 1
        name:
          type: string
          example: Иван
        surname:
          type: string
          example: Иванов
        name_course:
          type: string
          example: JavaScript
        payment:
          type: integer
          example: 25000
        payment_id:
          type: integer
          example: 1
        date_p:
          pattern: ([0-9]{2}).(?:[0-9]{2}).([0-9]{4})
          type: string
          format: date
          example: "27.07.2021"
    inline_response_200_3:
      type: object
      properties:
        student_id:
          type: integer
          example: 1
        name:
          type: string
          example: Иван
        surname:
          type: string
          example: Иванов
        name_course:
          type: string
          example: JavaScript
        student_courses_id:
          type: integer
          example: 2
  requestBodies:
    createStudent:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createStudent'
    updateStudent:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateStudent'
    createCourse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createCourse'
    updateCourse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateCourse'
    createPayment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createPayment'
    updatePayment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updatePayment'
    createStudentsCourses:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createStudentsCourses'
    updateStudentsCourses:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateStudentsCourses'
